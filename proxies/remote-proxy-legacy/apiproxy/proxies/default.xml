<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="AuthenticationError">
            <Condition>(fault.name Matches "ExecutionFailed") </Condition>
            <Step>
                <Name>AuthenticationError</Name>
                <Condition>(calloutResponse.status.code = "401") </Condition>
            </Step>
        </FaultRule>
    </FaultRules>
    <Flows>
        <Flow name="Verify API Key">
            <Description/>
            <Request>
                <Step>
                    <Name>AuthenticationError</Name>
                    <Condition>request.header.Authorization is null</Condition>
                </Step>
                <Step>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <Name>Extract-API-Key</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Invalid-API-Key</Name>
                    <Condition>apikey is null</Condition>
                </Step>
                <Step>
                    <Name>Access-App-Info</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Invalid-API-Key</Name>
                    <Condition>AccessEntity.Access-App-Info is null</Condition>
                </Step>
                <Step>
                    <Name>Extract-App-Name</Name>
                </Step>
                <Step>
                    <Name>Products-to-JSON</Name>
                </Step>
                <Step>
                    <Name>Get-Private-Key</Name>
                </Step>
                <Step>
                    <Name>Set-JWT-Variables</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Invalid-API-Key</Name>
                    <Condition>isValidApiKey != "true"</Condition>
                </Step>
                <Step>
                    <Name>Access-Developer-Info</Name>
                </Step>
                <Step>
                    <Name>Generate-VerifyKey-Token</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>Set-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/verifyApiKey") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Get API Products">
            <Description/>
            <Request>
                <Step>
                    <Name>AuthenticationError</Name>
                    <Condition>request.header.Authorization is null</Condition>
                </Step>
                <Step>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <Name>Extract-Request-ETag</Name>
                </Step>
                <Step>
                    <Name>Lookup-Products</Name>
                </Step>
                <Step>
                    <Name>Parse-Product-Cache</Name>
                    <Condition>lookupcache.Lookup-Products.cachehit = true</Condition>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>JavaCallout</Name>
                    <Condition>lookupcache.Lookup-Products.cachehit = false</Condition>
                </Step>
                <Step>
                    <Name>Set-Product-Cache</Name>
                    <Condition>lookupcache.Lookup-Products.cachehit = false</Condition>
                </Step>
                <Step>
                    <Name>Populate-Product-List</Name>
                    <Condition>lookupcache.Lookup-Products.cachehit = false</Condition>
                </Step>
                <Step>
                    <Name>Send-Not-Modified</Name>
                    <Condition>(lookupcache.Lookup-Products.cachehit = true) and (etag = cachedETag)</Condition>
                </Step>
                <Step>
                    <Name>Send-Product-List</Name>
                    <Condition>(lookupcache.Lookup-Products.cachehit = true) and (etag != cachedETag)</Condition>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/products") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Obtain Access Token">
            <Description/>
            <Request>
                <Step>
                    <Name>Extract-OAuth-Params</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Unknown-Request</Name>
                    <Condition>client_id is null OR client_secret is null OR grant_type is null</Condition>
                </Step>
                <Step>
                    <Name>Create-OAuth-Request</Name>
                </Step>
                <Step>
                    <Name>Access-App-Info</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Invalid-API-Key</Name>
                    <Condition>AccessEntity.Access-App-Info is null</Condition>
                </Step>
                <Step>
                    <Name>Extract-App-Name</Name>
                </Step>
                <Step>
                    <Name>Products-to-JSON</Name>
                </Step>
                <Step>
                    <Name>AccessTokenRequest</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Unknown-Request</Name>
                    <Condition>oauthV2.AccessTokenRequest.failed is true</Condition>
                </Step>
                <Step>
                    <Name>Set-JWT-Variables</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Unknown-Request</Name>
                    <Condition>isValidApiKey != "true"</Condition>
                </Step>
                <Step>
                    <Name>Get-Private-Key</Name>
                </Step>
                <Step>
                    <Name>Generate-Access-Token</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>Set-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Get JWK Public Keys">
            <Description>This flow returns public keys as JWK</Description>
            <Request>
                <Step>
                    <Name>Get-JWKS</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Missing-JWKS</Name>
                    <Condition>private.jwks is null</Condition>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>Send-JWKs-Message</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/certs") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Get Version">
            <Description>Get the version of the API Proxy</Description>
            <Request/>
            <Response>
                <Step>
                    <Name>Send-Version</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/version") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Rotate Key">
            <Description/>
            <Request>
                <Step>
                    <Name>AuthenticationError</Name>
                    <Condition>request.header.Authorization is null</Condition>
                </Step>
                <Step>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <Name>Extract-Rotate-Variables</Name>
                </Step>
                <Step>
                    <Name>Raise-Fault-Missing-JWKS</Name>
                    <Condition>kid is null or jwks is null or private_key is null</Condition>
                </Step>
                <Step>
                    <Name>Update-Keys</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/rotate") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="DistributedQuota">
            <Request>
                <Step>
                    <Name>AuthenticationError</Name>
                    <Condition>request.header.Authorization is null</Condition>
                </Step>
                <Step>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <Name>Set-Quota-Variables</Name>
                </Step>
                <Step>
                    <Name>DistributedQuota</Name>
                </Step>
                <Step>
                    <Name>Eval-Quota-Result</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>Set-Quota-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/quotas") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Unknown Request">
            <Description>Unknown Request</Description>
            <Request>
                <Step>
                    <Name>Raise-Fault-Missing-JWKS</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <PreFlow name="PreFlow">
        <Request/>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/remote-service</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="noroute"/>
</ProxyEndpoint>